/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.applications_v1.Application', null, global);
goog.exportSymbol('proto.applications_v1.ApplicationIdRequest', null, global);
goog.exportSymbol('proto.applications_v1.ApplicationObjectReply', null, global);
goog.exportSymbol('proto.applications_v1.ApplicationObjectRequest', null, global);
goog.exportSymbol('proto.applications_v1.ApplicationPage', null, global);
goog.exportSymbol('proto.applications_v1.ApplicationPageReply', null, global);
goog.exportSymbol('proto.applications_v1.ApplicationPageRequest', null, global);
goog.exportSymbol('proto.applications_v1.ErrorDescription', null, global);
goog.exportSymbol('proto.applications_v1.PagingParams', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ErrorDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.ErrorDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ErrorDescription.displayName = 'proto.applications_v1.ErrorDescription';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ErrorDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ErrorDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ErrorDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ErrorDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    correlationId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cause: jspb.Message.getFieldWithDefault(msg, 7, ""),
    stackTrace: jspb.Message.getFieldWithDefault(msg, 8, ""),
    detailsMap: (f = msg.getDetailsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ErrorDescription}
 */
proto.applications_v1.ErrorDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ErrorDescription;
  return proto.applications_v1.ErrorDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ErrorDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ErrorDescription}
 */
proto.applications_v1.ErrorDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCause(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStackTrace(value);
      break;
    case 9:
      var value = msg.getDetailsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ErrorDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ErrorDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ErrorDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ErrorDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCause();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStackTrace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDetailsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string correlation_id = 4;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string message = 6;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cause = 7;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getCause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setCause = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string stack_trace = 8;
 * @return {string}
 */
proto.applications_v1.ErrorDescription.prototype.getStackTrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.applications_v1.ErrorDescription.prototype.setStackTrace = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<string, string> details = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.applications_v1.ErrorDescription.prototype.getDetailsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


proto.applications_v1.ErrorDescription.prototype.clearDetailsMap = function() {
  this.getDetailsMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.PagingParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.PagingParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.PagingParams.displayName = 'proto.applications_v1.PagingParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.PagingParams.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.PagingParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.PagingParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.PagingParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    take: jspb.Message.getFieldWithDefault(msg, 2, 0),
    total: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.PagingParams}
 */
proto.applications_v1.PagingParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.PagingParams;
  return proto.applications_v1.PagingParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.PagingParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.PagingParams}
 */
proto.applications_v1.PagingParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTake(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.PagingParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.PagingParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.PagingParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.PagingParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTake();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotal();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 skip = 1;
 * @return {number}
 */
proto.applications_v1.PagingParams.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.applications_v1.PagingParams.prototype.setSkip = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 take = 2;
 * @return {number}
 */
proto.applications_v1.PagingParams.prototype.getTake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.applications_v1.PagingParams.prototype.setTake = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool total = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.applications_v1.PagingParams.prototype.getTotal = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.applications_v1.PagingParams.prototype.setTotal = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.Application = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.applications_v1.Application.repeatedFields_, null);
};
goog.inherits(proto.applications_v1.Application, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.Application.displayName = 'proto.applications_v1.Application';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.applications_v1.Application.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.Application.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.Application.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.Application} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.Application.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nameMap: (f = msg.getNameMap()) ? f.toObject(includeInstance, undefined) : [],
    descriptionMap: (f = msg.getDescriptionMap()) ? f.toObject(includeInstance, undefined) : [],
    product: jspb.Message.getFieldWithDefault(msg, 4, ""),
    group: jspb.Message.getFieldWithDefault(msg, 5, ""),
    copyrights: jspb.Message.getFieldWithDefault(msg, 6, ""),
    url: jspb.Message.getFieldWithDefault(msg, 7, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 8, ""),
    minVer: jspb.Message.getFieldWithDefault(msg, 9, 0),
    maxVer: jspb.Message.getFieldWithDefault(msg, 10, 0),
    accessRightsList: jspb.Message.getRepeatedField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.Application}
 */
proto.applications_v1.Application.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.Application;
  return proto.applications_v1.Application.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.Application} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.Application}
 */
proto.applications_v1.Application.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getNameMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = msg.getDescriptionMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCopyrights(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinVer(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxVer(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccessRights(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.Application.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.Application.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.Application} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.Application.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNameMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDescriptionMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCopyrights();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMinVer();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getMaxVer();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAccessRightsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.applications_v1.Application.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.applications_v1.Application.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> name = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.applications_v1.Application.prototype.getNameMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.applications_v1.Application.prototype.clearNameMap = function() {
  this.getNameMap().clear();
};


/**
 * map<string, string> description = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.applications_v1.Application.prototype.getDescriptionMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.applications_v1.Application.prototype.clearDescriptionMap = function() {
  this.getDescriptionMap().clear();
};


/**
 * optional string product = 4;
 * @return {string}
 */
proto.applications_v1.Application.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.applications_v1.Application.prototype.setProduct = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string group = 5;
 * @return {string}
 */
proto.applications_v1.Application.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.applications_v1.Application.prototype.setGroup = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string copyrights = 6;
 * @return {string}
 */
proto.applications_v1.Application.prototype.getCopyrights = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.applications_v1.Application.prototype.setCopyrights = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.applications_v1.Application.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.applications_v1.Application.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string icon = 8;
 * @return {string}
 */
proto.applications_v1.Application.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.applications_v1.Application.prototype.setIcon = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 min_ver = 9;
 * @return {number}
 */
proto.applications_v1.Application.prototype.getMinVer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.applications_v1.Application.prototype.setMinVer = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 max_ver = 10;
 * @return {number}
 */
proto.applications_v1.Application.prototype.getMaxVer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.applications_v1.Application.prototype.setMaxVer = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated string access_rights = 11;
 * @return {!Array<string>}
 */
proto.applications_v1.Application.prototype.getAccessRightsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.applications_v1.Application.prototype.setAccessRightsList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.applications_v1.Application.prototype.addAccessRights = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.applications_v1.Application.prototype.clearAccessRightsList = function() {
  this.setAccessRightsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ApplicationPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.applications_v1.ApplicationPage.repeatedFields_, null);
};
goog.inherits(proto.applications_v1.ApplicationPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ApplicationPage.displayName = 'proto.applications_v1.ApplicationPage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.applications_v1.ApplicationPage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ApplicationPage.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ApplicationPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ApplicationPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.applications_v1.Application.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ApplicationPage}
 */
proto.applications_v1.ApplicationPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ApplicationPage;
  return proto.applications_v1.ApplicationPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ApplicationPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ApplicationPage}
 */
proto.applications_v1.ApplicationPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 2:
      var value = new proto.applications_v1.Application;
      reader.readMessage(value,proto.applications_v1.Application.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ApplicationPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ApplicationPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ApplicationPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.applications_v1.Application.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 total = 1;
 * @return {number}
 */
proto.applications_v1.ApplicationPage.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.applications_v1.ApplicationPage.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Application data = 2;
 * @return {!Array<!proto.applications_v1.Application>}
 */
proto.applications_v1.ApplicationPage.prototype.getDataList = function() {
  return /** @type{!Array<!proto.applications_v1.Application>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.applications_v1.Application, 2));
};


/** @param {!Array<!proto.applications_v1.Application>} value */
proto.applications_v1.ApplicationPage.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.applications_v1.Application=} opt_value
 * @param {number=} opt_index
 * @return {!proto.applications_v1.Application}
 */
proto.applications_v1.ApplicationPage.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.applications_v1.Application, opt_index);
};


proto.applications_v1.ApplicationPage.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ApplicationPageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.ApplicationPageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ApplicationPageRequest.displayName = 'proto.applications_v1.ApplicationPageRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ApplicationPageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ApplicationPageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ApplicationPageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationPageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filterMap: (f = msg.getFilterMap()) ? f.toObject(includeInstance, undefined) : [],
    paging: (f = msg.getPaging()) && proto.applications_v1.PagingParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ApplicationPageRequest}
 */
proto.applications_v1.ApplicationPageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ApplicationPageRequest;
  return proto.applications_v1.ApplicationPageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ApplicationPageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ApplicationPageRequest}
 */
proto.applications_v1.ApplicationPageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = msg.getFilterMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = new proto.applications_v1.PagingParams;
      reader.readMessage(value,proto.applications_v1.PagingParams.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ApplicationPageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ApplicationPageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ApplicationPageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationPageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilterMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.applications_v1.PagingParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.applications_v1.ApplicationPageRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.applications_v1.ApplicationPageRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> filter = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.applications_v1.ApplicationPageRequest.prototype.getFilterMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.applications_v1.ApplicationPageRequest.prototype.clearFilterMap = function() {
  this.getFilterMap().clear();
};


/**
 * optional PagingParams paging = 3;
 * @return {?proto.applications_v1.PagingParams}
 */
proto.applications_v1.ApplicationPageRequest.prototype.getPaging = function() {
  return /** @type{?proto.applications_v1.PagingParams} */ (
    jspb.Message.getWrapperField(this, proto.applications_v1.PagingParams, 3));
};


/** @param {?proto.applications_v1.PagingParams|undefined} value */
proto.applications_v1.ApplicationPageRequest.prototype.setPaging = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.applications_v1.ApplicationPageRequest.prototype.clearPaging = function() {
  this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.applications_v1.ApplicationPageRequest.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ApplicationPageReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.ApplicationPageReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ApplicationPageReply.displayName = 'proto.applications_v1.ApplicationPageReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ApplicationPageReply.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ApplicationPageReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ApplicationPageReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationPageReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.applications_v1.ErrorDescription.toObject(includeInstance, f),
    page: (f = msg.getPage()) && proto.applications_v1.ApplicationPage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ApplicationPageReply}
 */
proto.applications_v1.ApplicationPageReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ApplicationPageReply;
  return proto.applications_v1.ApplicationPageReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ApplicationPageReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ApplicationPageReply}
 */
proto.applications_v1.ApplicationPageReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.applications_v1.ErrorDescription;
      reader.readMessage(value,proto.applications_v1.ErrorDescription.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new proto.applications_v1.ApplicationPage;
      reader.readMessage(value,proto.applications_v1.ApplicationPage.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ApplicationPageReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ApplicationPageReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ApplicationPageReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationPageReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.applications_v1.ErrorDescription.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.applications_v1.ApplicationPage.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorDescription error = 1;
 * @return {?proto.applications_v1.ErrorDescription}
 */
proto.applications_v1.ApplicationPageReply.prototype.getError = function() {
  return /** @type{?proto.applications_v1.ErrorDescription} */ (
    jspb.Message.getWrapperField(this, proto.applications_v1.ErrorDescription, 1));
};


/** @param {?proto.applications_v1.ErrorDescription|undefined} value */
proto.applications_v1.ApplicationPageReply.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.applications_v1.ApplicationPageReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.applications_v1.ApplicationPageReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ApplicationPage page = 2;
 * @return {?proto.applications_v1.ApplicationPage}
 */
proto.applications_v1.ApplicationPageReply.prototype.getPage = function() {
  return /** @type{?proto.applications_v1.ApplicationPage} */ (
    jspb.Message.getWrapperField(this, proto.applications_v1.ApplicationPage, 2));
};


/** @param {?proto.applications_v1.ApplicationPage|undefined} value */
proto.applications_v1.ApplicationPageReply.prototype.setPage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.applications_v1.ApplicationPageReply.prototype.clearPage = function() {
  this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.applications_v1.ApplicationPageReply.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ApplicationIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.ApplicationIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ApplicationIdRequest.displayName = 'proto.applications_v1.ApplicationIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ApplicationIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ApplicationIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ApplicationIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ApplicationIdRequest}
 */
proto.applications_v1.ApplicationIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ApplicationIdRequest;
  return proto.applications_v1.ApplicationIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ApplicationIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ApplicationIdRequest}
 */
proto.applications_v1.ApplicationIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ApplicationIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ApplicationIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ApplicationIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.applications_v1.ApplicationIdRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.applications_v1.ApplicationIdRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string application_id = 2;
 * @return {string}
 */
proto.applications_v1.ApplicationIdRequest.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.applications_v1.ApplicationIdRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ApplicationObjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.ApplicationObjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ApplicationObjectRequest.displayName = 'proto.applications_v1.ApplicationObjectRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ApplicationObjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ApplicationObjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ApplicationObjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationObjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    application: (f = msg.getApplication()) && proto.applications_v1.Application.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ApplicationObjectRequest}
 */
proto.applications_v1.ApplicationObjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ApplicationObjectRequest;
  return proto.applications_v1.ApplicationObjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ApplicationObjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ApplicationObjectRequest}
 */
proto.applications_v1.ApplicationObjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = new proto.applications_v1.Application;
      reader.readMessage(value,proto.applications_v1.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ApplicationObjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ApplicationObjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ApplicationObjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationObjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplication();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.applications_v1.Application.serializeBinaryToWriter
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.applications_v1.ApplicationObjectRequest.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.applications_v1.ApplicationObjectRequest.prototype.setCorrelationId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Application application = 2;
 * @return {?proto.applications_v1.Application}
 */
proto.applications_v1.ApplicationObjectRequest.prototype.getApplication = function() {
  return /** @type{?proto.applications_v1.Application} */ (
    jspb.Message.getWrapperField(this, proto.applications_v1.Application, 2));
};


/** @param {?proto.applications_v1.Application|undefined} value */
proto.applications_v1.ApplicationObjectRequest.prototype.setApplication = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.applications_v1.ApplicationObjectRequest.prototype.clearApplication = function() {
  this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.applications_v1.ApplicationObjectRequest.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.applications_v1.ApplicationObjectReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.applications_v1.ApplicationObjectReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.applications_v1.ApplicationObjectReply.displayName = 'proto.applications_v1.ApplicationObjectReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.applications_v1.ApplicationObjectReply.prototype.toObject = function(opt_includeInstance) {
  return proto.applications_v1.ApplicationObjectReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.applications_v1.ApplicationObjectReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationObjectReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.applications_v1.ErrorDescription.toObject(includeInstance, f),
    application: (f = msg.getApplication()) && proto.applications_v1.Application.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.applications_v1.ApplicationObjectReply}
 */
proto.applications_v1.ApplicationObjectReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.applications_v1.ApplicationObjectReply;
  return proto.applications_v1.ApplicationObjectReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.applications_v1.ApplicationObjectReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.applications_v1.ApplicationObjectReply}
 */
proto.applications_v1.ApplicationObjectReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.applications_v1.ErrorDescription;
      reader.readMessage(value,proto.applications_v1.ErrorDescription.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new proto.applications_v1.Application;
      reader.readMessage(value,proto.applications_v1.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.applications_v1.ApplicationObjectReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.applications_v1.ApplicationObjectReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.applications_v1.ApplicationObjectReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.applications_v1.ApplicationObjectReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.applications_v1.ErrorDescription.serializeBinaryToWriter
    );
  }
  f = message.getApplication();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.applications_v1.Application.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorDescription error = 1;
 * @return {?proto.applications_v1.ErrorDescription}
 */
proto.applications_v1.ApplicationObjectReply.prototype.getError = function() {
  return /** @type{?proto.applications_v1.ErrorDescription} */ (
    jspb.Message.getWrapperField(this, proto.applications_v1.ErrorDescription, 1));
};


/** @param {?proto.applications_v1.ErrorDescription|undefined} value */
proto.applications_v1.ApplicationObjectReply.prototype.setError = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.applications_v1.ApplicationObjectReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.applications_v1.ApplicationObjectReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Application application = 2;
 * @return {?proto.applications_v1.Application}
 */
proto.applications_v1.ApplicationObjectReply.prototype.getApplication = function() {
  return /** @type{?proto.applications_v1.Application} */ (
    jspb.Message.getWrapperField(this, proto.applications_v1.Application, 2));
};


/** @param {?proto.applications_v1.Application|undefined} value */
proto.applications_v1.ApplicationObjectReply.prototype.setApplication = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.applications_v1.ApplicationObjectReply.prototype.clearApplication = function() {
  this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.applications_v1.ApplicationObjectReply.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.applications_v1);
